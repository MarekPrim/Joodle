package utils;

import java.util.ArrayList;

import modele.Cours;

public class ICSTimeSlotStack extends ArrayList<Cours> {
	
	private static final long serialVersionUID = 3606713725038303452L;

	public ICSTimeSlotStack() {
		super();
	}
	
	//Generated by Copilot
	public Cours searchByStart(String looked) {
		for(Cours slot : this) {
			if(slot.getStart().equals(looked)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEnd(String looked) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(looked)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByCours(String looked) {
		for(Cours slot : this) {
			if(slot.getCours().equals(looked)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchBySalle(String looked) {
		for(Cours slot : this) {
			if(slot.getSalle().equals(looked)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByProfesseur(String looked) {
		for(Cours slot : this) {
			if(slot.getProfesseur().equals(looked)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndEnd(String lookedStart, String lookedEnd) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getEnd().equals(lookedEnd)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndCours(String lookedStart, String lookedCours) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getCours().equals(lookedCours)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndSalle(String lookedStart, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndProfesseur(String lookedStart, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEndAndCours(String lookedEnd, String lookedCours) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(lookedEnd) && slot.getCours().equals(lookedCours)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEndAndSalle(String lookedEnd, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(lookedEnd) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEndAndProfesseur(String lookedEnd, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(lookedEnd) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByCoursAndSalle(String lookedCours, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getCours().equals(lookedCours) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByCoursAndProfesseur(String lookedCours, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getCours().equals(lookedCours) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchBySalleAndProfesseur(String lookedSalle, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getSalle().equals(lookedSalle) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndEndAndCours(String lookedStart, String lookedEnd, String lookedCours) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getEnd().equals(lookedEnd) && slot.getCours().equals(lookedCours)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndEndAndSalle(String lookedStart, String lookedEnd, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getEnd().equals(lookedEnd) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndEndAndProfesseur(String lookedStart, String lookedEnd, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getEnd().equals(lookedEnd) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndCoursAndSalle(String lookedStart, String lookedCours, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getCours().equals(lookedCours) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndCoursAndProfesseur(String lookedStart, String lookedCours, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getCours().equals(lookedCours) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByStartAndSalleAndProfesseur(String lookedStart, String lookedSalle, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getStart().equals(lookedStart) && slot.getSalle().equals(lookedSalle) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEndAndCoursAndSalle(String lookedEnd, String lookedCours, String lookedSalle) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(lookedEnd) && slot.getCours().equals(lookedCours) && slot.getSalle().equals(lookedSalle)) {
				return slot;
			}
		}
		return null;
	}

	//Generated by Copilot
	public Cours searchByEndAndCoursAndProfesseur(String lookedEnd, String lookedCours, String lookedProfesseur) {
		for(Cours slot : this) {
			if(slot.getEnd().equals(lookedEnd) && slot.getCours().equals(lookedCours) && slot.getProfesseur().equals(lookedProfesseur)) {
				return slot;
			}
		}
		return null;
	}



}
